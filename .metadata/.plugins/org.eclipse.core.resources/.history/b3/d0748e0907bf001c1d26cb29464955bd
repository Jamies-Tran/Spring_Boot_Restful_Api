package com.test;

import java.util.Scanner;

import org.springframework.security.authentication.ProviderManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;

import com.test.encoder.MyPasswordEncoder;
import com.test.mydatasource.MyDataSource;
import com.test.user.MyUserDetailImpl;

public class MainApplication {
	public static void main(String[] args) {
		final Scanner sc = new Scanner(System.in);
		System.out.print("Username: ");
		String username = sc.nextLine();
		System.out.print("Password: ");
		String password = sc.nextLine();
		System.out.print("Encoder: ");
		String idForEncoder = sc.nextLine();
		//MyDataSource dataSource = new MyDataSource();
		//UserDetailsService userService = MyUserDetailImpl.jdbcUsers(username, encoder.encode(password), dataSource.dataSource());
//		UserDetailsService userService = MyUserDetailImpl.users(username, encoder.encode(password));
//		UserDetails user = userService.loadUserByUsername(username);
//		System.out.println("Username: " + user.getUsername() + " Password: " + user.getPassword() + " Authority: " + user.getAuthorities());
		MyPasswordEncoder encoder = new MyPasswordEncoder(idForEncoder);
		String encodePassword = encoder.encode(password);
		UserDetailsService userDetailsService = MyUserDetailImpl.users(username, encodePassword);
		DaoAuthenticationProvider daoAuthProvider = new DaoAuthenticationProvider();
		daoAuthProvider.setUserDetailsService(userDetailsService);
		daoAuthProvider.setPasswordEncoder(encoder.getPasswordEncoder());
		ProviderManager provider = new ProviderManager(daoAuthProvider);
		Authentication auth = provider.authenticate(new UsernamePasswordAuthenticationToken(username, password));
		SecurityContextHolder.getContext().setAuthentication(auth);
		//System.out.println("Username: " + auth.getName() + " Password: " + auth.getCredentials() + " Authority: " + auth.getAuthorities());
	}
}
