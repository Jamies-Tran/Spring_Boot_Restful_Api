ackage com.test;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

import org.springframework.security.crypto.argon2.Argon2PasswordEncoder;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.DelegatingPasswordEncoder;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.crypto.password.Pbkdf2PasswordEncoder;
import org.springframework.security.crypto.password.StandardPasswordEncoder;
import org.springframework.security.crypto.scrypt.SCryptPasswordEncoder;

public class MainApplication {
	
	public static PasswordEncoder argon2PasswordEncoder() {
		return new Argon2PasswordEncoder();
	}
	
	@SuppressWarnings(value = { "deprecation" })
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String password = "minhtq2197";
		Map<String, PasswordEncoder> encodedList = new HashMap<>();
		encodedList.put("bcrypt", new BCryptPasswordEncoder());
		encodedList.put("argon2", new Argon2PasswordEncoder());
		encodedList.put("pbkdf2", new Pbkdf2PasswordEncoder());
		encodedList.put("scrypt", new SCryptPasswordEncoder());
		encodedList.put("noop", NoOpPasswordEncoder.getInstance());
		encodedList.put("sha2", new StandardPasswordEncoder());
		System.out.println("Which type ");
		String encodeType = sc.nextLine();
		PasswordEncoder encoder = new DelegatingPasswordEncoder(encodeType, encodedList);
		String passwordEcoded = encoder.encode(password);
		if(encoder.matches(password, passwordEcoded)) {
			System.out.println(passwordEcoded);
		}
		System.out.println(encoder.upgradeEncoding(passwordEcoded));
	}
}
